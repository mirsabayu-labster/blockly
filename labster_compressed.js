// Do not edit this file; automatically generated by build.py.
'use strict';

Blockly.Labster=new Blockly.Generator("Labster");Blockly.Labster.addReservedWords("Missions, Mission, Tasks, Task, Actions, Setter, Element, CompleteWhen, CompleteActions");Blockly.Labster.ORDER_ATOMIC=0;Blockly.Labster.ORDER_MEMBER=1;Blockly.Labster.ORDER_NEW=1;Blockly.Labster.ORDER_FUNCTION_CALL=2;Blockly.Labster.ORDER_INCREMENT=3;Blockly.Labster.ORDER_DECREMENT=3;Blockly.Labster.ORDER_LOGICAL_NOT=4;Blockly.Labster.ORDER_BITWISE_NOT=4;Blockly.Labster.ORDER_UNARY_PLUS=4;
Blockly.Labster.ORDER_UNARY_NEGATION=4;Blockly.Labster.ORDER_TYPEOF=4;Blockly.Labster.ORDER_VOID=4;Blockly.Labster.ORDER_DELETE=4;Blockly.Labster.ORDER_MULTIPLICATION=5;Blockly.Labster.ORDER_DIVISION=5;Blockly.Labster.ORDER_MODULUS=5;Blockly.Labster.ORDER_ADDITION=6;Blockly.Labster.ORDER_SUBTRACTION=6;Blockly.Labster.ORDER_BITWISE_SHIFT=7;Blockly.Labster.ORDER_RELATIONAL=8;Blockly.Labster.ORDER_IN=8;Blockly.Labster.ORDER_INSTANCEOF=8;Blockly.Labster.ORDER_EQUALITY=9;
Blockly.Labster.ORDER_BITWISE_AND=10;Blockly.Labster.ORDER_BITWISE_XOR=11;Blockly.Labster.ORDER_BITWISE_OR=12;Blockly.Labster.ORDER_LOGICAL_AND=13;Blockly.Labster.ORDER_LOGICAL_OR=14;Blockly.Labster.ORDER_CONDITIONAL=15;Blockly.Labster.ORDER_ASSIGNMENT=16;Blockly.Labster.ORDER_COMMA=17;Blockly.Labster.ORDER_NONE=99;
Blockly.Labster.init=function(a){Blockly.Labster.definitions_=Object.create(null);Blockly.Labster.functionNames_=Object.create(null);Blockly.Labster.variableDB_?Blockly.Labster.variableDB_.reset():Blockly.Labster.variableDB_=new Blockly.Names(Blockly.Labster.RESERVED_WORDS_,"$")};
Blockly.Labster.finish=function(a){var c=[],b;for(b in Blockly.Labster.definitions_)c.push(Blockly.Labster.definitions_[b]);delete Blockly.Labster.definitions_;delete Blockly.Labster.functionNames_;Blockly.Labster.variableDB_.reset();return c.join("\n\n")+"\n\n\n"+a};Blockly.Labster.scrubNakedValue=function(a){return a+";\n"};Blockly.Labster.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/'/g,"\\'");return"'"+a+"'"};
Blockly.Labster.scrub_=function(a,c){var b=a.nextConnection&&a.nextConnection.targetBlock(),b=Blockly.Labster.blockToCode(b);return""+c+b};Blockly.Labster.getAdjusted=function(a,c,b,d,e){return""};function LabsterSaveBlock(a){a=Blockly.Xml.workspaceToDom(a);return Blockly.Xml.domToText(a)}function LabsterLoadBlock(a){return Blockly.Xml.textToDom(xmlString)};Blockly.Labster.labster_blocky={};Blockly.Labster.missions=function(a){return"<Missions >\n"+Blockly.Labster.statementToCode(a,"mission0")+"</Missions>"};Blockly.Labster.mission=function(a){var c=a.getFieldValue("mission_Id0"),b=Blockly.Labster.valueToCode(a,"FROM",Blockly.Labster.ORDER_NONE)||"";a=Blockly.Labster.statementToCode(a,"mission_content1");return'<Mission Id="'+c+'" '+b+" >\n"+a+"</Missions>\n"};
Blockly.Labster.tasks=function(a){return"<Tasks >\n"+Blockly.Labster.statementToCode(a,"tasks0")+"</Tasks>\n"};
Blockly.Labster.task=function(a){var c=a.getFieldValue("task_Id0"),b=Blockly.Labster.valueToCode(a,"FROM",Blockly.Labster.ORDER_NONE)||"",d=Blockly.Labster.statementToCode(a,"task_Actions1"),e=Blockly.Labster.statementToCode(a,"task_CompleteWhen2");a=Blockly.Labster.statementToCode(a,"task_CompleteActions3");var f="";null!=d&&""!=d&&(f="\n<Actions>\n"+d+"\n</Actions>\n");d="";null!=e&&""!=e&&(d="\n<CompleteWhen>\n"+e+"\n</CompleteWhen>\n");e="";null!=a&&""!=a&&(e="\n<CompleteActions>\n"+a+"\n</CompleteActions>\n");
return'<Task Id="'+c+'" '+b+" >"+f+d+e+"</Task>"};Blockly.Labster.setter=function(a){var c=a.getFieldValue("setter_Id0"),b=a.getFieldValue("setter_property0");a=a.getFieldValue("setter_value0");return'<Setter Id="'+c+'" Property="'+b+'" Value="'+a+'"/>'};Blockly.Labster.move_to=function(a){return'<Element Element="'+a.getFieldValue("move_to_Id0")+'"/>'};
Blockly.Labster.data_condition=function(a){var c=a.getFieldValue("data_condition_Id0"),b=a.getFieldValue("data_condition_property0"),d=a.getFieldValue("data_condition_comparison0");a=a.getFieldValue("data_condition_value0");return'<DataCondition Target="'+c+'" Property="'+b+'" Comparison="'+d+'" Value="'+a+'"/>'};